#version 430   

in vec3 fragPos;
in vec3 fragNormal;
out vec4 color;

uniform vec3 modelColor;
uniform vec3 cameraPos;
uniform vec3 lightPos;

void main()
{
   vec3 lightColor = vec3(1.0, 1.0, 1.0);
   vec3 ambient = 0.1 * lightColor;
   vec3 diff = max(0.0, dot(fragNormal, normalize(lightPos - fragPos))) * lightColor;
   
   vec3 lightIncident = normalize(fragPos - lightPos);
   vec3 lightReflect = reflect(lightIncident, fragNormal);
   vec3 spec = pow(max(0.0, dot(normalize(cameraPos - fragPos), lightReflect)), 16) * 0.5 * lightColor;
   
   vec3 resColor = (diff + ambient + spec) * modelColor;
   color = vec4(resColor, 1.0);
}
